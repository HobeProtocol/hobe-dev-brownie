{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "apr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "getPricePerShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "getUnderlyingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_something",
          "type": "uint256"
        }
      ],
      "name": "setSomething",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "something",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/Vault.sol",
    "2": "interfaces/YearnVault.sol"
  },
  "ast": {
    "absolutePath": "contracts/Vault.sol",
    "exportedSymbols": {
      "Vault": [
        168
      ],
      "YearnVault": [
        224
      ]
    },
    "id": 169,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 60,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "interfaces/YearnVault.sol",
        "file": "../interfaces/YearnVault.sol",
        "id": 62,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 169,
        "sourceUnit": 225,
        "src": "62:56:1",
        "symbolAliases": [
          {
            "foreign": {
              "id": 61,
              "name": "YearnVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 224,
              "src": "70:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_YearnVault_$224_$",
                "typeString": "type(contract YearnVault)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Vault",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 168,
        "linearizedBaseContracts": [
          168
        ],
        "name": "Vault",
        "nameLocation": "129:5:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "18160ddd",
            "id": 64,
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "157:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 168,
            "src": "142:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 63,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "142:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c45a0155",
            "id": 66,
            "mutability": "mutable",
            "name": "factory",
            "nameLocation": "190:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 168,
            "src": "175:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 65,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "175:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a7a0d537",
            "id": 68,
            "mutability": "mutable",
            "name": "something",
            "nameLocation": "218:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 168,
            "src": "203:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 67,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "203:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 71,
            "mutability": "mutable",
            "name": "_init_done",
            "nameLocation": "246:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 168,
            "src": "233:31:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 69,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "233:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 70,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "259:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 74,
            "mutability": "mutable",
            "name": "accepted_tokens",
            "nameLocation": "280:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 168,
            "src": "270:25:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 72,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "270:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 73,
              "nodeType": "ArrayTypeName",
              "src": "270:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 78,
            "mutability": "mutable",
            "name": "user_to_ids",
            "nameLocation": "331:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 168,
            "src": "302:40:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 77,
              "keyType": {
                "id": 75,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "311:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "302:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 76,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "322:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "373:71:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 81,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "389:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "389:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 83,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66,
                          "src": "403:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "389:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79466163746f72792829",
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "412:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0490f9dabe2d681ab47ede58608239c19f794636b88709d7471418db081ef3f",
                          "typeString": "literal_string \"onlyFactory()\""
                        },
                        "value": "onlyFactory()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0490f9dabe2d681ab47ede58608239c19f794636b88709d7471418db081ef3f",
                          "typeString": "literal_string \"onlyFactory()\""
                        }
                      ],
                      "id": 80,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "381:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "381:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "381:47:1"
                },
                {
                  "id": 88,
                  "nodeType": "PlaceholderStatement",
                  "src": "436:1:1"
                }
              ]
            },
            "id": 90,
            "name": "onlyFactory",
            "nameLocation": "359:11:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "370:2:1"
            },
            "src": "350:94:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "476:17:1",
              "statements": [
                {
                  "id": 92,
                  "nodeType": "PlaceholderStatement",
                  "src": "485:1:1"
                }
              ]
            },
            "id": 94,
            "name": "updateMaxFixed",
            "nameLocation": "459:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "473:2:1"
            },
            "src": "450:43:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "521:35:1",
              "statements": [
                {
                  "expression": {
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 97,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "529:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 98,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "539:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "539:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "529:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "529:20:1"
                }
              ]
            },
            "id": 103,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "511:2:1"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "521:0:1"
            },
            "scope": 168,
            "src": "499:57:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "625:37:1",
              "statements": [
                {
                  "expression": {
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 110,
                      "name": "something",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "633:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 111,
                      "name": "_something",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "645:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "633:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "633:22:1"
                }
              ]
            },
            "functionSelector": "c41b461b",
            "id": 115,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 108,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 107,
                  "name": "onlyFactory",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 90,
                  "src": "613:11:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "613:11:1"
              }
            ],
            "name": "setSomething",
            "nameLocation": "571:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "_something",
                  "nameLocation": "592:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "584:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "583:20:1"
            },
            "returnParameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "625:0:1"
            },
            "scope": 168,
            "src": "562:100:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 118,
              "nodeType": "Block",
              "src": "696:14:1",
              "statements": []
            },
            "functionSelector": "d0e30db0",
            "id": 119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "677:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "684:2:1"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "696:0:1"
            },
            "scope": 168,
            "src": "668:42:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "744:114:1",
              "statements": []
            },
            "id": 123,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_invest",
            "nameLocation": "725:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "732:2:1"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "744:0:1"
            },
            "scope": 168,
            "src": "716:142:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "1037:49:1",
              "statements": []
            },
            "functionSelector": "57ded9c9",
            "id": 127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "apr",
            "nameLocation": "1022:3:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1025:2:1"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1037:0:1"
            },
            "scope": 168,
            "src": "1013:73:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 140,
              "nodeType": "Block",
              "src": "1204:107:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 135,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "1290:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 134,
                          "name": "YearnVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 224,
                          "src": "1279:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_YearnVault_$224_$",
                            "typeString": "type(contract YearnVault)"
                          }
                        },
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1279:17:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_YearnVault_$224",
                          "typeString": "contract YearnVault"
                        }
                      },
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 175,
                      "src": "1279:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1279:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 133,
                  "id": 139,
                  "nodeType": "Return",
                  "src": "1272:32:1"
                }
              ]
            },
            "functionSelector": "691bcc88",
            "id": 141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUnderlyingToken",
            "nameLocation": "1142:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1169:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1161:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1160:15:1"
            },
            "returnParameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1196:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1196:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1195:9:1"
            },
            "scope": 168,
            "src": "1133:178:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 160,
              "nodeType": "Block",
              "src": "1386:215:1",
              "statements": [
                {
                  "assignments": [
                    150
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 150,
                      "mutability": "mutable",
                      "name": "yearnVault",
                      "nameLocation": "1519:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 160,
                      "src": "1508:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_YearnVault_$224",
                        "typeString": "contract YearnVault"
                      },
                      "typeName": {
                        "id": 149,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 148,
                          "name": "YearnVault",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 224,
                          "src": "1508:10:1"
                        },
                        "referencedDeclaration": 224,
                        "src": "1508:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_YearnVault_$224",
                          "typeString": "contract YearnVault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 154,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 152,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "1543:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 151,
                      "name": "YearnVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 224,
                      "src": "1532:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_YearnVault_$224_$",
                        "typeString": "type(contract YearnVault)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1532:17:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_YearnVault_$224",
                      "typeString": "contract YearnVault"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1508:41:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 155,
                            "name": "yearnVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 150,
                            "src": "1567:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_YearnVault_$224",
                              "typeString": "contract YearnVault"
                            }
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pricePerShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 196,
                          "src": "1567:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1567:26:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 158,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1566:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 147,
                  "id": 159,
                  "nodeType": "Return",
                  "src": "1559:35:1"
                }
              ]
            },
            "functionSelector": "ec422afd",
            "id": 161,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPricePerShare",
            "nameLocation": "1326:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1351:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "1343:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1343:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1342:15:1"
            },
            "returnParameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 146,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "1378:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1378:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1377:9:1"
            },
            "scope": 168,
            "src": "1317:284:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 166,
              "nodeType": "Block",
              "src": "1642:163:1",
              "statements": []
            },
            "functionSelector": "70a08231",
            "id": 167,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1616:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "1626:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1626:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1625:9:1"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1642:0:1"
            },
            "scope": 168,
            "src": "1607:198:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 169,
        "src": "120:1687:1",
        "usedErrors": []
      }
    ],
    "src": "0:1809:1"
  },
  "bytecode": "60806040526003805460ff1916905534801561001a57600080fd5b50600180546001600160a01b031916331790556103178061003c6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063a7a0d53711610066578063a7a0d537146100f2578063c41b461b146100fb578063c45a01551461010e578063d0e30db0146100b4578063ec422afd1461012157600080fd5b806318160ddd1461009857806357ded9c9146100b4578063691bcc88146100b657806370a08231146100e1575b600080fd5b6100a160005481565b6040519081526020015b60405180910390f35b005b6100c96100c4366004610275565b610134565b6040516001600160a01b0390911681526020016100ab565b6100b46100ef366004610275565b50565b6100a160025481565b6100b4610109366004610292565b61019e565b6001546100c9906001600160a01b031681565b6100a161012f366004610275565b6101f1565b6000816001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610174573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019891906102ab565b92915050565b6001546001600160a01b031633146101ec5760405162461bcd60e51b815260206004820152600d60248201526c6f6e6c79466163746f7279282960981b604482015260640160405180910390fd5b600255565b600080829050806001600160a01b03166399530b066040518163ffffffff1660e01b8152600401602060405180830381865afa158015610235573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025991906102c8565b9392505050565b6001600160a01b03811681146100ef57600080fd5b60006020828403121561028757600080fd5b813561025981610260565b6000602082840312156102a457600080fd5b5035919050565b6000602082840312156102bd57600080fd5b815161025981610260565b6000602082840312156102da57600080fd5b505191905056fea2646970667358221220419a14d823c97e56f752d629eee983815f17f16da1862404e497d10582a4583264736f6c634300080c0033",
  "bytecodeSha1": "08624220a74cdfed532603e7693e04d5e8c4316b",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "Vault",
  "coverageMap": {
    "branches": {
      "1": {},
      "2": {}
    },
    "statements": {
      "1": {
        "Vault.getPricePerShare": {
          "2": [
            1559,
            1594
          ]
        },
        "Vault.getUnderlyingToken": {
          "0": [
            1272,
            1304
          ]
        },
        "Vault.setSomething": {
          "1": [
            633,
            655
          ]
        }
      },
      "2": {}
    }
  },
  "dependencies": [
    "YearnVault"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063a7a0d53711610066578063a7a0d537146100f2578063c41b461b146100fb578063c45a01551461010e578063d0e30db0146100b4578063ec422afd1461012157600080fd5b806318160ddd1461009857806357ded9c9146100b4578063691bcc88146100b657806370a08231146100e1575b600080fd5b6100a160005481565b6040519081526020015b60405180910390f35b005b6100c96100c4366004610275565b610134565b6040516001600160a01b0390911681526020016100ab565b6100b46100ef366004610275565b50565b6100a160025481565b6100b4610109366004610292565b61019e565b6001546100c9906001600160a01b031681565b6100a161012f366004610275565b6101f1565b6000816001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610174573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019891906102ab565b92915050565b6001546001600160a01b031633146101ec5760405162461bcd60e51b815260206004820152600d60248201526c6f6e6c79466163746f7279282960981b604482015260640160405180910390fd5b600255565b600080829050806001600160a01b03166399530b066040518163ffffffff1660e01b8152600401602060405180830381865afa158015610235573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025991906102c8565b9392505050565b6001600160a01b03811681146100ef57600080fd5b60006020828403121561028757600080fd5b813561025981610260565b6000602082840312156102a457600080fd5b5035919050565b6000602082840312156102bd57600080fd5b815161025981610260565b6000602082840312156102da57600080fd5b505191905056fea2646970667358221220419a14d823c97e56f752d629eee983815f17f16da1862404e497d10582a4583264736f6c634300080c0033",
  "deployedSourceMap": "120:1687:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;142:26;;;;;;;;;160:25:3;;;148:2;133:18;142:26:1;;;;;;;;1013:73;;1133:178;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;748:32:3;;;730:51;;718:2;703:18;1133:178:1;584:203:3;1607:198:1;;;;;;:::i;:::-;;;203:24;;;;;;562:100;;;;;;:::i;:::-;;:::i;175:22::-;;;;;-1:-1:-1;;;;;175:22:1;;;1317:284;;;;;;:::i;:::-;;:::i;1133:178::-;1196:7;1290:5;-1:-1:-1;;;;;1279:23:1;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1272:32;1133:178;-1:-1:-1;;1133:178:1:o;562:100::-;403:7;;-1:-1:-1;;;;;403:7:1;389:10;:21;381:47;;;;-1:-1:-1;;;381:47:1;;1435:2:3;381:47:1;;;1417:21:3;1474:2;1454:18;;;1447:30;-1:-1:-1;;;1493:18:3;;;1486:43;1546:18;;381:47:1;;;;;;;;633:9:::1;:22:::0;562:100::o;1317:284::-;1378:7;1508:21;1543:5;1508:41;;1567:10;-1:-1:-1;;;;;1567:24:1;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1559:35;1317:284;-1:-1:-1;;;1317:284:1:o;196:131:3:-;-1:-1:-1;;;;;271:31:3;;261:42;;251:70;;317:1;314;307:12;332:247;391:6;444:2;432:9;423:7;419:23;415:32;412:52;;;460:1;457;450:12;412:52;499:9;486:23;518:31;543:5;518:31;:::i;792:180::-;851:6;904:2;892:9;883:7;879:23;875:32;872:52;;;920:1;917;910:12;872:52;-1:-1:-1;943:23:3;;792:180;-1:-1:-1;792:180:3:o;977:251::-;1047:6;1100:2;1088:9;1079:7;1075:23;1071:32;1068:52;;;1116:1;1113;1106:12;1068:52;1148:9;1142:16;1167:31;1192:5;1167:31;:::i;1575:184::-;1645:6;1698:2;1686:9;1677:7;1673:23;1669:32;1666:52;;;1714:1;1711;1704:12;1666:52;-1:-1:-1;1737:16:3;;1575:184;-1:-1:-1;1575:184:3:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    120,
    1807
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA7A0D537 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA7A0D537 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xC41B461B EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xEC422AFD EQ PUSH2 0x121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x57DED9C9 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x691BCC88 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA1 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST STOP JUMPDEST PUSH2 0xC9 PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x275 JUMP JUMPDEST PUSH2 0x134 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAB JUMP JUMPDEST PUSH2 0xB4 PUSH2 0xEF CALLDATASIZE PUSH1 0x4 PUSH2 0x275 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA1 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB4 PUSH2 0x109 CALLDATASIZE PUSH1 0x4 PUSH2 0x292 JUMP JUMPDEST PUSH2 0x19E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xC9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xA1 PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x275 JUMP JUMPDEST PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFC0C546A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x174 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x2AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x6F6E6C79466163746F72792829 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x99530B06 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x235 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x2C8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x259 DUP2 PUSH2 0x260 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x259 DUP2 PUSH2 0x260 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE SWAP11 EQ 0xD8 0x23 0xC9 PUSH31 0x56F752D629EEE983815F17F16DA1862404E497D10582A4583264736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        120,
        1807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x93"
    },
    "25": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA7A0D537"
    },
    "38": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "GT",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA7A0D537"
    },
    "49": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "EQ",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF2"
    },
    "53": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC41B461B"
    },
    "60": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFB"
    },
    "64": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC45A0155"
    },
    "71": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10E"
    },
    "75": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xD0E30DB0"
    },
    "82": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB4"
    },
    "86": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "DUP1",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xEC422AFD"
    },
    "93": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "EQ",
      "path": "1"
    },
    "94": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x121"
    },
    "97": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "98": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "DUP1",
      "path": "1"
    },
    "101": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "REVERT",
      "path": "1"
    },
    "102": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "103": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "DUP1",
      "path": "1"
    },
    "104": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x18160DDD"
    },
    "109": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "EQ",
      "path": "1"
    },
    "110": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x98"
    },
    "113": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "DUP1",
      "path": "1"
    },
    "115": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x57DED9C9"
    },
    "120": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "EQ",
      "path": "1"
    },
    "121": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB4"
    },
    "124": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "DUP1",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x691BCC88"
    },
    "131": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "EQ",
      "path": "1"
    },
    "132": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB6"
    },
    "135": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "136": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "DUP1",
      "path": "1"
    },
    "137": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "142": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "EQ",
      "path": "1"
    },
    "143": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE1"
    },
    "146": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "147": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "148": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "150": {
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "DUP1",
      "path": "1"
    },
    "151": {
      "first_revert": true,
      "fn": null,
      "offset": [
        120,
        1807
      ],
      "op": "REVERT",
      "path": "1"
    },
    "152": {
      "offset": [
        142,
        168
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "153": {
      "fn": null,
      "offset": [
        142,
        168
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA1"
    },
    "156": {
      "fn": null,
      "offset": [
        142,
        168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        142,
        168
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "159": {
      "fn": null,
      "offset": [
        142,
        168
      ],
      "op": "DUP2",
      "path": "1"
    },
    "160": {
      "fn": null,
      "offset": [
        142,
        168
      ],
      "op": "JUMP",
      "path": "1"
    },
    "161": {
      "fn": null,
      "offset": [
        142,
        168
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "162": {
      "fn": null,
      "offset": [
        142,
        168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "164": {
      "fn": null,
      "offset": [
        142,
        168
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "165": {
      "op": "SWAP1"
    },
    "166": {
      "op": "DUP2"
    },
    "167": {
      "op": "MSTORE"
    },
    "168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "170": {
      "op": "ADD"
    },
    "171": {
      "offset": [
        142,
        168
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "172": {
      "fn": null,
      "offset": [
        142,
        168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "174": {
      "fn": null,
      "offset": [
        142,
        168
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "175": {
      "fn": null,
      "offset": [
        142,
        168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "176": {
      "fn": null,
      "offset": [
        142,
        168
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "177": {
      "fn": null,
      "offset": [
        142,
        168
      ],
      "op": "SUB",
      "path": "1"
    },
    "178": {
      "fn": null,
      "offset": [
        142,
        168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "179": {
      "fn": null,
      "offset": [
        142,
        168
      ],
      "op": "RETURN",
      "path": "1"
    },
    "180": {
      "fn": "Vault.apr",
      "offset": [
        1013,
        1086
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "181": {
      "fn": "Vault.apr",
      "offset": [
        1013,
        1086
      ],
      "op": "STOP",
      "path": "1"
    },
    "182": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1133,
        1311
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "183": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1133,
        1311
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC9"
    },
    "186": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1133,
        1311
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC4"
    },
    "189": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1133,
        1311
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "190": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1133,
        1311
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "192": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1133,
        1311
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x275"
    },
    "195": {
      "fn": "Vault.getUnderlyingToken",
      "jump": "i",
      "offset": [
        1133,
        1311
      ],
      "op": "JUMP",
      "path": "1"
    },
    "196": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1133,
        1311
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "197": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1133,
        1311
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x134"
    },
    "200": {
      "fn": "Vault.getUnderlyingToken",
      "jump": "i",
      "offset": [
        1133,
        1311
      ],
      "op": "JUMP",
      "path": "1"
    },
    "201": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1133,
        1311
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "202": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1133,
        1311
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "204": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1133,
        1311
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "211": {
      "op": "SHL"
    },
    "212": {
      "op": "SUB"
    },
    "213": {
      "op": "SWAP1"
    },
    "214": {
      "op": "SWAP2"
    },
    "215": {
      "op": "AND"
    },
    "216": {
      "op": "DUP2"
    },
    "217": {
      "op": "MSTORE"
    },
    "218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "220": {
      "op": "ADD"
    },
    "221": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1133,
        1311
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAB"
    },
    "224": {
      "op": "JUMP"
    },
    "225": {
      "fn": "Vault.balanceOf",
      "offset": [
        1607,
        1805
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "226": {
      "fn": "Vault.balanceOf",
      "offset": [
        1607,
        1805
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB4"
    },
    "229": {
      "fn": "Vault.balanceOf",
      "offset": [
        1607,
        1805
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEF"
    },
    "232": {
      "fn": "Vault.balanceOf",
      "offset": [
        1607,
        1805
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "233": {
      "fn": "Vault.balanceOf",
      "offset": [
        1607,
        1805
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "235": {
      "fn": "Vault.balanceOf",
      "offset": [
        1607,
        1805
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x275"
    },
    "238": {
      "fn": "Vault.balanceOf",
      "jump": "i",
      "offset": [
        1607,
        1805
      ],
      "op": "JUMP",
      "path": "1"
    },
    "239": {
      "fn": "Vault.balanceOf",
      "offset": [
        1607,
        1805
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "240": {
      "fn": "Vault.balanceOf",
      "offset": [
        1607,
        1805
      ],
      "op": "POP",
      "path": "1"
    },
    "241": {
      "fn": "Vault.balanceOf",
      "offset": [
        1607,
        1805
      ],
      "op": "JUMP",
      "path": "1"
    },
    "242": {
      "offset": [
        203,
        227
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "243": {
      "fn": "Vault.balanceOf",
      "offset": [
        203,
        227
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA1"
    },
    "246": {
      "fn": "Vault.balanceOf",
      "offset": [
        203,
        227
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "248": {
      "fn": "Vault.balanceOf",
      "offset": [
        203,
        227
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "249": {
      "fn": "Vault.balanceOf",
      "offset": [
        203,
        227
      ],
      "op": "DUP2",
      "path": "1"
    },
    "250": {
      "fn": "Vault.balanceOf",
      "offset": [
        203,
        227
      ],
      "op": "JUMP",
      "path": "1"
    },
    "251": {
      "fn": "Vault.setSomething",
      "offset": [
        562,
        662
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "252": {
      "fn": "Vault.setSomething",
      "offset": [
        562,
        662
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB4"
    },
    "255": {
      "fn": "Vault.setSomething",
      "offset": [
        562,
        662
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x109"
    },
    "258": {
      "fn": "Vault.setSomething",
      "offset": [
        562,
        662
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "259": {
      "fn": "Vault.setSomething",
      "offset": [
        562,
        662
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "261": {
      "fn": "Vault.setSomething",
      "offset": [
        562,
        662
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x292"
    },
    "264": {
      "fn": "Vault.setSomething",
      "jump": "i",
      "offset": [
        562,
        662
      ],
      "op": "JUMP",
      "path": "1"
    },
    "265": {
      "fn": "Vault.setSomething",
      "offset": [
        562,
        662
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "266": {
      "fn": "Vault.setSomething",
      "offset": [
        562,
        662
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19E"
    },
    "269": {
      "fn": "Vault.setSomething",
      "jump": "i",
      "offset": [
        562,
        662
      ],
      "op": "JUMP",
      "path": "1"
    },
    "270": {
      "offset": [
        175,
        197
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "271": {
      "fn": "Vault.setSomething",
      "offset": [
        175,
        197
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "273": {
      "fn": "Vault.setSomething",
      "offset": [
        175,
        197
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "274": {
      "fn": "Vault.setSomething",
      "offset": [
        175,
        197
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC9"
    },
    "277": {
      "fn": "Vault.setSomething",
      "offset": [
        175,
        197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "284": {
      "op": "SHL"
    },
    "285": {
      "op": "SUB"
    },
    "286": {
      "offset": [
        175,
        197
      ],
      "op": "AND",
      "path": "1"
    },
    "287": {
      "fn": "Vault.setSomething",
      "offset": [
        175,
        197
      ],
      "op": "DUP2",
      "path": "1"
    },
    "288": {
      "fn": "Vault.setSomething",
      "offset": [
        175,
        197
      ],
      "op": "JUMP",
      "path": "1"
    },
    "289": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1317,
        1601
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "290": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1317,
        1601
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA1"
    },
    "293": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1317,
        1601
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12F"
    },
    "296": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1317,
        1601
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "297": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1317,
        1601
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "299": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1317,
        1601
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x275"
    },
    "302": {
      "fn": "Vault.getPricePerShare",
      "jump": "i",
      "offset": [
        1317,
        1601
      ],
      "op": "JUMP",
      "path": "1"
    },
    "303": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1317,
        1601
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "304": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1317,
        1601
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F1"
    },
    "307": {
      "fn": "Vault.getPricePerShare",
      "jump": "i",
      "offset": [
        1317,
        1601
      ],
      "op": "JUMP",
      "path": "1"
    },
    "308": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1133,
        1311
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "309": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1196,
        1203
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "311": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1290,
        1295
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 0
    },
    "312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "316": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "318": {
      "op": "SHL"
    },
    "319": {
      "op": "SUB"
    },
    "320": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1302
      ],
      "op": "AND",
      "path": "1"
    },
    "321": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1302
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFC0C546A"
    },
    "326": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "328": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "329": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "DUP2",
      "path": "1"
    },
    "330": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "335": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "AND",
      "path": "1"
    },
    "336": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "338": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "SHL",
      "path": "1"
    },
    "339": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "DUP2",
      "path": "1"
    },
    "340": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "341": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "343": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "ADD",
      "path": "1"
    },
    "344": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "346": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "348": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "349": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "DUP1",
      "path": "1"
    },
    "350": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "DUP4",
      "path": "1"
    },
    "351": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "SUB",
      "path": "1"
    },
    "352": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "DUP2",
      "path": "1"
    },
    "353": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "DUP7",
      "path": "1"
    },
    "354": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "GAS",
      "path": "1"
    },
    "355": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "356": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "357": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "DUP1",
      "path": "1"
    },
    "358": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "359": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x174"
    },
    "362": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "363": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "364": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "366": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "DUP1",
      "path": "1"
    },
    "367": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "368": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "369": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "371": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "REVERT",
      "path": "1"
    },
    "372": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "373": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "POP",
      "path": "1"
    },
    "374": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "POP",
      "path": "1"
    },
    "375": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "POP",
      "path": "1"
    },
    "376": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "POP",
      "path": "1"
    },
    "377": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "379": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "380": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "381": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "383": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "NOT",
      "path": "1"
    },
    "384": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "386": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "DUP3",
      "path": "1"
    },
    "387": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "ADD",
      "path": "1"
    },
    "388": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "AND",
      "path": "1"
    },
    "389": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "DUP3",
      "path": "1"
    },
    "390": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "ADD",
      "path": "1"
    },
    "391": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "DUP1",
      "path": "1"
    },
    "392": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "394": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "395": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "POP",
      "path": "1"
    },
    "396": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "DUP2",
      "path": "1"
    },
    "397": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "ADD",
      "path": "1"
    },
    "398": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "399": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x198"
    },
    "402": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "403": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "404": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AB"
    },
    "407": {
      "fn": "Vault.getUnderlyingToken",
      "jump": "i",
      "offset": [
        1279,
        1304
      ],
      "op": "JUMP",
      "path": "1"
    },
    "408": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1279,
        1304
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "409": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1272,
        1304
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "410": {
      "fn": "Vault.getUnderlyingToken",
      "offset": [
        1133,
        1311
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "411": {
      "op": "POP"
    },
    "412": {
      "op": "POP"
    },
    "413": {
      "fn": "Vault.getUnderlyingToken",
      "jump": "o",
      "offset": [
        1133,
        1311
      ],
      "op": "JUMP",
      "path": "1"
    },
    "414": {
      "fn": "Vault.setSomething",
      "offset": [
        562,
        662
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "415": {
      "offset": [
        403,
        410
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "417": {
      "fn": "Vault.setSomething",
      "offset": [
        403,
        410
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "424": {
      "op": "SHL"
    },
    "425": {
      "op": "SUB"
    },
    "426": {
      "offset": [
        403,
        410
      ],
      "op": "AND",
      "path": "1"
    },
    "427": {
      "offset": [
        389,
        399
      ],
      "op": "CALLER",
      "path": "1"
    },
    "428": {
      "offset": [
        389,
        410
      ],
      "op": "EQ",
      "path": "1"
    },
    "429": {
      "offset": [
        381,
        428
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EC"
    },
    "432": {
      "offset": [
        381,
        428
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "433": {
      "fn": "Vault.setSomething",
      "offset": [
        381,
        428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "435": {
      "fn": "Vault.setSomething",
      "offset": [
        381,
        428
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "436": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "440": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "442": {
      "op": "SHL"
    },
    "443": {
      "offset": [
        381,
        428
      ],
      "op": "DUP2",
      "path": "1"
    },
    "444": {
      "fn": "Vault.setSomething",
      "offset": [
        381,
        428
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "445": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "447": {
      "offset": [
        381,
        428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "449": {
      "fn": "Vault.setSomething",
      "offset": [
        381,
        428
      ],
      "op": "DUP3",
      "path": "1"
    },
    "450": {
      "fn": "Vault.setSomething",
      "offset": [
        381,
        428
      ],
      "op": "ADD",
      "path": "1"
    },
    "451": {
      "op": "MSTORE"
    },
    "452": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "454": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "456": {
      "op": "DUP3"
    },
    "457": {
      "op": "ADD"
    },
    "458": {
      "op": "MSTORE"
    },
    "459": {
      "op": "PUSH13",
      "value": "0x6F6E6C79466163746F72792829"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "475": {
      "op": "SHL"
    },
    "476": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "478": {
      "op": "DUP3"
    },
    "479": {
      "op": "ADD"
    },
    "480": {
      "op": "MSTORE"
    },
    "481": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "483": {
      "op": "ADD"
    },
    "484": {
      "offset": [
        381,
        428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "486": {
      "fn": "Vault.setSomething",
      "offset": [
        381,
        428
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "487": {
      "fn": "Vault.setSomething",
      "offset": [
        381,
        428
      ],
      "op": "DUP1",
      "path": "1"
    },
    "488": {
      "fn": "Vault.setSomething",
      "offset": [
        381,
        428
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "489": {
      "fn": "Vault.setSomething",
      "offset": [
        381,
        428
      ],
      "op": "SUB",
      "path": "1"
    },
    "490": {
      "fn": "Vault.setSomething",
      "offset": [
        381,
        428
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "491": {
      "fn": "Vault.setSomething",
      "offset": [
        381,
        428
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "492": {
      "fn": "Vault.setSomething",
      "offset": [
        381,
        428
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "493": {
      "fn": "Vault.setSomething",
      "offset": [
        633,
        642
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x2"
    },
    "495": {
      "fn": "Vault.setSomething",
      "offset": [
        633,
        655
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "496": {
      "fn": "Vault.setSomething",
      "jump": "o",
      "offset": [
        562,
        662
      ],
      "op": "JUMP",
      "path": "1"
    },
    "497": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1317,
        1601
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "498": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1378,
        1385
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "500": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1508,
        1529
      ],
      "op": "DUP1",
      "path": "1"
    },
    "501": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1543,
        1548
      ],
      "op": "DUP3",
      "path": "1"
    },
    "502": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1508,
        1549
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "503": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1508,
        1549
      ],
      "op": "POP",
      "path": "1"
    },
    "504": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1577
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 2
    },
    "505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "511": {
      "op": "SHL"
    },
    "512": {
      "op": "SUB"
    },
    "513": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1591
      ],
      "op": "AND",
      "path": "1"
    },
    "514": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1591
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x99530B06"
    },
    "519": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "521": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "522": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "DUP2",
      "path": "1"
    },
    "523": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "528": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "AND",
      "path": "1"
    },
    "529": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "531": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "SHL",
      "path": "1"
    },
    "532": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "DUP2",
      "path": "1"
    },
    "533": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "534": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "536": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "ADD",
      "path": "1"
    },
    "537": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "539": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "541": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "542": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "DUP1",
      "path": "1"
    },
    "543": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "DUP4",
      "path": "1"
    },
    "544": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "SUB",
      "path": "1"
    },
    "545": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "DUP2",
      "path": "1"
    },
    "546": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "DUP7",
      "path": "1"
    },
    "547": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "GAS",
      "path": "1"
    },
    "548": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "549": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "550": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "DUP1",
      "path": "1"
    },
    "551": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "552": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x235"
    },
    "555": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "556": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "557": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "559": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "DUP1",
      "path": "1"
    },
    "560": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "561": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "562": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "564": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "REVERT",
      "path": "1"
    },
    "565": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "566": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "POP",
      "path": "1"
    },
    "567": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "POP",
      "path": "1"
    },
    "568": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "POP",
      "path": "1"
    },
    "569": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "POP",
      "path": "1"
    },
    "570": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "572": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "573": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "574": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "576": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "NOT",
      "path": "1"
    },
    "577": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "579": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "DUP3",
      "path": "1"
    },
    "580": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "ADD",
      "path": "1"
    },
    "581": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "AND",
      "path": "1"
    },
    "582": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "DUP3",
      "path": "1"
    },
    "583": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "ADD",
      "path": "1"
    },
    "584": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "DUP1",
      "path": "1"
    },
    "585": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "587": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "588": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "POP",
      "path": "1"
    },
    "589": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "DUP2",
      "path": "1"
    },
    "590": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "ADD",
      "path": "1"
    },
    "591": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "592": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x259"
    },
    "595": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "596": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "597": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C8"
    },
    "600": {
      "fn": "Vault.getPricePerShare",
      "jump": "i",
      "offset": [
        1567,
        1593
      ],
      "op": "JUMP",
      "path": "1"
    },
    "601": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1567,
        1593
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "602": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1559,
        1594
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "603": {
      "fn": "Vault.getPricePerShare",
      "offset": [
        1317,
        1601
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "604": {
      "op": "POP"
    },
    "605": {
      "op": "POP"
    },
    "606": {
      "op": "POP"
    },
    "607": {
      "fn": "Vault.getPricePerShare",
      "jump": "o",
      "offset": [
        1317,
        1601
      ],
      "op": "JUMP",
      "path": "1"
    },
    "608": {
      "op": "JUMPDEST"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "SUB"
    },
    "617": {
      "op": "DUP2"
    },
    "618": {
      "op": "AND"
    },
    "619": {
      "op": "DUP2"
    },
    "620": {
      "op": "EQ"
    },
    "621": {
      "op": "PUSH2",
      "value": "0xEF"
    },
    "624": {
      "op": "JUMPI"
    },
    "625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "627": {
      "op": "DUP1"
    },
    "628": {
      "op": "REVERT"
    },
    "629": {
      "op": "JUMPDEST"
    },
    "630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "632": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "634": {
      "op": "DUP3"
    },
    "635": {
      "op": "DUP5"
    },
    "636": {
      "op": "SUB"
    },
    "637": {
      "op": "SLT"
    },
    "638": {
      "op": "ISZERO"
    },
    "639": {
      "op": "PUSH2",
      "value": "0x287"
    },
    "642": {
      "op": "JUMPI"
    },
    "643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "645": {
      "op": "DUP1"
    },
    "646": {
      "op": "REVERT"
    },
    "647": {
      "op": "JUMPDEST"
    },
    "648": {
      "op": "DUP2"
    },
    "649": {
      "op": "CALLDATALOAD"
    },
    "650": {
      "op": "PUSH2",
      "value": "0x259"
    },
    "653": {
      "op": "DUP2"
    },
    "654": {
      "op": "PUSH2",
      "value": "0x260"
    },
    "657": {
      "jump": "i",
      "op": "JUMP"
    },
    "658": {
      "op": "JUMPDEST"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "661": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "663": {
      "op": "DUP3"
    },
    "664": {
      "op": "DUP5"
    },
    "665": {
      "op": "SUB"
    },
    "666": {
      "op": "SLT"
    },
    "667": {
      "op": "ISZERO"
    },
    "668": {
      "op": "PUSH2",
      "value": "0x2A4"
    },
    "671": {
      "op": "JUMPI"
    },
    "672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "674": {
      "op": "DUP1"
    },
    "675": {
      "op": "REVERT"
    },
    "676": {
      "op": "JUMPDEST"
    },
    "677": {
      "op": "POP"
    },
    "678": {
      "op": "CALLDATALOAD"
    },
    "679": {
      "op": "SWAP2"
    },
    "680": {
      "op": "SWAP1"
    },
    "681": {
      "op": "POP"
    },
    "682": {
      "jump": "o",
      "op": "JUMP"
    },
    "683": {
      "op": "JUMPDEST"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "686": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "688": {
      "op": "DUP3"
    },
    "689": {
      "op": "DUP5"
    },
    "690": {
      "op": "SUB"
    },
    "691": {
      "op": "SLT"
    },
    "692": {
      "op": "ISZERO"
    },
    "693": {
      "op": "PUSH2",
      "value": "0x2BD"
    },
    "696": {
      "op": "JUMPI"
    },
    "697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "699": {
      "op": "DUP1"
    },
    "700": {
      "op": "REVERT"
    },
    "701": {
      "op": "JUMPDEST"
    },
    "702": {
      "op": "DUP2"
    },
    "703": {
      "op": "MLOAD"
    },
    "704": {
      "op": "PUSH2",
      "value": "0x259"
    },
    "707": {
      "op": "DUP2"
    },
    "708": {
      "op": "PUSH2",
      "value": "0x260"
    },
    "711": {
      "jump": "i",
      "op": "JUMP"
    },
    "712": {
      "op": "JUMPDEST"
    },
    "713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "717": {
      "op": "DUP3"
    },
    "718": {
      "op": "DUP5"
    },
    "719": {
      "op": "SUB"
    },
    "720": {
      "op": "SLT"
    },
    "721": {
      "op": "ISZERO"
    },
    "722": {
      "op": "PUSH2",
      "value": "0x2DA"
    },
    "725": {
      "op": "JUMPI"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "728": {
      "op": "DUP1"
    },
    "729": {
      "op": "REVERT"
    },
    "730": {
      "op": "JUMPDEST"
    },
    "731": {
      "op": "POP"
    },
    "732": {
      "op": "MLOAD"
    },
    "733": {
      "op": "SWAP2"
    },
    "734": {
      "op": "SWAP1"
    },
    "735": {
      "op": "POP"
    },
    "736": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "b057a963ad405ca5fda7703438735092caa19f19",
  "source": "pragma solidity ^0.8.0;\n    /*\n    * @title HobeVault\n    */\n\nimport {YearnVault} from \"../interfaces/YearnVault.sol\";\n\ncontract Vault {\n\n    uint256 public totalSupply;\n\n    address public factory;\n    uint256 public something;\n    bool private _init_done = false;\n    address[] accepted_tokens;\n\n    mapping (address => uint256) user_to_ids;\n\n\n    modifier onlyFactory() {\n      require(msg.sender == factory, \"onlyFactory()\");\n      _;\n    }\n\n    modifier updateMaxFixed() {\n\n      _;\n    }\n\n    constructor () public {\n      factory = msg.sender;\n    }\n\n    function setSomething(uint256 _something) external onlyFactory {\n      something = _something;\n    }\n\n    function deposit() external {\n      \n    }\n\n    function _invest() internal {\n      // \u0431\u0435\u0440\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0435 \u0431\u0430\u043b\u0430\u043d\u0441\u044b accepted_tokens \u0438 \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u0438\u0442 \u0444\u0430\u0440\u043c\u0438\u0442\u044c\u0441\u044f\n    }\n\n    //\u0433\u0440\u0443\u0431\u043e \u0433\u043e\u0432\u043e\u0440\u044f \u043d\u0430\u0434\u043e \u043e\u0431\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u0448 \u0432\u0430\u0443\u043b\u0442 \u0443\u0437\u043d\u0430\u0432\u0430\u0442\u044c \u0410\u041f\u0418 \u043f\u0443\u043b\u0430 \u043a \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043e\u043d \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\n    function apr() external { // aka pricePerShare -> shareValue -> APR\n    }\n\n\n    // Getter functions for Yearn vault\n    function getUnderlyingToken(address vault) public view returns(address){\n        // @return The underlying token in the YearnVault\n        return YearnVault(vault).token();\n    }\n\n    function getPricePerShare(address vault) public view returns(uint256){\n        // @notice Computes the latest yield value for a yearn vault.\n        // @return The latest yield value\n        YearnVault yearnVault = YearnVault(vault);\n        return (yearnVault.pricePerShare());\n    }\n\n    function balanceOf(address) public {\n      // \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0441\u043a\u0430\u0436\u0435\u043d\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0442\u043e\u043a\u0435\u043d\u043e\u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u043e\u0436\u043d\u043e \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u044e\n    }\n}\n\n",
  "sourceMap": "120:1687:1:-:0;;;233:31;;;-1:-1:-1;;233:31:1;;;499:57;;;;;;;;;-1:-1:-1;529:7:1;:20;;-1:-1:-1;;;;;;529:20:1;539:10;529:20;;;120:1687;;;;;;",
  "sourcePath": "contracts/Vault.sol",
  "type": "contract"
}