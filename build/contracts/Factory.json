{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "Deployed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault_code",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        }
      ],
      "name": "deploy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Factory.sol",
    "1": "contracts/Vault.sol"
  },
  "ast": {
    "absolutePath": "contracts/Factory.sol",
    "exportedSymbols": {
      "Factory": [
        60
      ],
      "Vault": [
        162
      ]
    },
    "id": 61,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "contracts/Vault.sol",
        "file": "./Vault.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 61,
        "sourceUnit": 163,
        "src": "57:21:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Factory",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 60,
        "linearizedBaseContracts": [
          60
        ],
        "name": "Factory",
        "nameLocation": "89:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "eventSelector": "f40fcec21964ffb566044d083b4073f29f7f7929110ea19e1b3ebe375d89055e",
            "id": 6,
            "name": "Deployed",
            "nameLocation": "109:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "126:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 6,
                  "src": "118:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "118:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "117:14:0"
            },
            "src": "103:29:0"
          },
          {
            "body": {
              "id": 58,
              "nodeType": "Block",
              "src": "209:828:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 19,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14,
                          "name": "_vault_code",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "227:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 17,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "250:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 16,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "242:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 15,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "242:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "242:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "227:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20696d706c656d656e746174696f6e20636f6e74726163742061646472657373207370656369666965642e",
                        "id": 20,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "254:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c372e7090f2d9d06db06f6f36ef45d2a29445422c259fe3383dcfb02cdb9141d",
                          "typeString": "literal_string \"No implementation contract address specified.\""
                        },
                        "value": "No implementation contract address specified."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c372e7090f2d9d06db06f6f36ef45d2a29445422c259fe3383dcfb02cdb9141d",
                          "typeString": "literal_string \"No implementation contract address specified.\""
                        }
                      ],
                      "id": 13,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "219:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "219:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22,
                  "nodeType": "ExpressionStatement",
                  "src": "219:83:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 29,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24,
                          "name": "_implementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "320:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 27,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "347:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 26,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "339:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "339:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 28,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "339:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "320:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20696d706c656d656e746174696f6e20636f6e74726163742061646472657373207370656369666965642e",
                        "id": 30,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "351:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c372e7090f2d9d06db06f6f36ef45d2a29445422c259fe3383dcfb02cdb9141d",
                          "typeString": "literal_string \"No implementation contract address specified.\""
                        },
                        "value": "No implementation contract address specified."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c372e7090f2d9d06db06f6f36ef45d2a29445422c259fe3383dcfb02cdb9141d",
                          "typeString": "literal_string \"No implementation contract address specified.\""
                        }
                      ],
                      "id": 23,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "312:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "312:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "312:87:0"
                },
                {
                  "assignments": [
                    34
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34,
                      "mutability": "mutable",
                      "name": "vault_addr",
                      "nameLocation": "450:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 58,
                      "src": "442:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "442:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "442:18:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "479:347:0",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "493:22:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "510:4:0",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "504:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "504:11:0"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "497:3:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "535:3:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "540:66:0",
                              "type": "",
                              "value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "528:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "528:79:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "528:79:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "631:3:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "636:4:0",
                                  "type": "",
                                  "value": "0x14"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "627:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "627:14:0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "647:4:0",
                                  "type": "",
                                  "value": "0x60"
                                },
                                {
                                  "name": "_vault_code",
                                  "nodeType": "YulIdentifier",
                                  "src": "653:11:0"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "643:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "643:22:0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "620:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "620:46:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "620:46:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "690:3:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "695:4:0",
                                  "type": "",
                                  "value": "0x28"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "686:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "686:14:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "702:66:0",
                              "type": "",
                              "value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "679:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "679:90:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "679:90:0"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "782:34:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "803:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "806:3:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "811:4:0",
                              "type": "",
                              "value": "0x37"
                            }
                          ],
                          "functionName": {
                            "name": "create",
                            "nodeType": "YulIdentifier",
                            "src": "796:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "796:20:0"
                        },
                        "variableNames": [
                          {
                            "name": "vault_addr",
                            "nodeType": "YulIdentifier",
                            "src": "782:10:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 8,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "653:11:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 34,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "782:10:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 36,
                  "nodeType": "InlineAssembly",
                  "src": "470:356:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 38,
                          "name": "vault_addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "843:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 41,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "865:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 40,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "857:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 39,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "857:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "857:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "843:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313136373a20637265617465206661696c6564",
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "869:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
                          "typeString": "literal_string \"ERC1167: create failed\""
                        },
                        "value": "ERC1167: create failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
                          "typeString": "literal_string \"ERC1167: create failed\""
                        }
                      ],
                      "id": 37,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "835:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "835:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "835:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51,
                        "name": "_implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "960:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 48,
                            "name": "vault_addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "943:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 47,
                          "name": "Vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 162,
                          "src": "937:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Vault_$162_$",
                            "typeString": "type(contract Vault)"
                          }
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "937:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$162",
                          "typeString": "contract Vault"
                        }
                      },
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 119,
                      "src": "937:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "937:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "937:39:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 55,
                        "name": "vault_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1019:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 54,
                      "name": "Deployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1010:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1010:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57,
                  "nodeType": "EmitStatement",
                  "src": "1005:25:0"
                }
              ]
            },
            "functionSelector": "545e7c61",
            "id": 59,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deploy",
            "nameLocation": "149:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_vault_code",
                  "nameLocation": "164:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "156:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "156:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "_implementation",
                  "nameLocation": "185:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "177:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "177:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "155:46:0"
            },
            "returnParameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "209:0:0"
            },
            "scope": 60,
            "src": "140:897:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 61,
        "src": "80:959:0",
        "usedErrors": []
      }
    ],
    "src": "32:1008:0"
  },
  "bytecode": "608060405234801561001057600080fd5b506102a1806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063545e7c6114610030575b600080fd5b61004361003e3660046101eb565b610045565b005b6001600160a01b0382166100745760405162461bcd60e51b815260040161006b9061021e565b60405180910390fd5b6001600160a01b03811661009a5760405162461bcd60e51b815260040161006b9061021e565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528360601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b0381166101325760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015260640161006b565b60405163066ad14f60e21b81526001600160a01b0383811660048301528216906319ab453c90602401600060405180830381600087803b15801561017557600080fd5b505af1158015610189573d6000803e3d6000fd5b50506040516001600160a01b03841681527ff40fcec21964ffb566044d083b4073f29f7f7929110ea19e1b3ebe375d89055e9250602001905060405180910390a1505050565b80356001600160a01b03811681146101e657600080fd5b919050565b600080604083850312156101fe57600080fd5b610207836101cf565b9150610215602084016101cf565b90509250929050565b6020808252602d908201527f4e6f20696d706c656d656e746174696f6e20636f6e747261637420616464726560408201526c39b99039b832b1b4b334b2b21760991b60608201526080019056fea264697066735822122040419de021e70ba7c5f197c5ac83b39653f922976ef423c5cb6e41bc3dc5f7d364736f6c634300080d0033",
  "bytecodeSha1": "3e0d70611a9de9fd44c2c7faceda808708ebb58d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "Factory",
  "coverageMap": {
    "branches": {
      "0": {
        "Factory.deploy": {
          "5": [
            227,
            252,
            true
          ],
          "6": [
            320,
            349,
            true
          ],
          "7": [
            843,
            867,
            true
          ]
        }
      },
      "1": {}
    },
    "statements": {
      "0": {
        "Factory.deploy": {
          "0": [
            219,
            302
          ],
          "1": [
            312,
            399
          ],
          "2": [
            835,
            894
          ],
          "3": [
            937,
            976
          ],
          "4": [
            1005,
            1030
          ]
        }
      },
      "1": {}
    }
  },
  "dependencies": [
    "Vault"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063545e7c6114610030575b600080fd5b61004361003e3660046101eb565b610045565b005b6001600160a01b0382166100745760405162461bcd60e51b815260040161006b9061021e565b60405180910390fd5b6001600160a01b03811661009a5760405162461bcd60e51b815260040161006b9061021e565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528360601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b0381166101325760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015260640161006b565b60405163066ad14f60e21b81526001600160a01b0383811660048301528216906319ab453c90602401600060405180830381600087803b15801561017557600080fd5b505af1158015610189573d6000803e3d6000fd5b50506040516001600160a01b03841681527ff40fcec21964ffb566044d083b4073f29f7f7929110ea19e1b3ebe375d89055e9250602001905060405180910390a1505050565b80356001600160a01b03811681146101e657600080fd5b919050565b600080604083850312156101fe57600080fd5b610207836101cf565b9150610215602084016101cf565b90509250929050565b6020808252602d908201527f4e6f20696d706c656d656e746174696f6e20636f6e747261637420616464726560408201526c39b99039b832b1b4b334b2b21760991b60608201526080019056fea264697066735822122040419de021e70ba7c5f197c5ac83b39653f922976ef423c5cb6e41bc3dc5f7d364736f6c634300080d0033",
  "deployedSourceMap": "80:959:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;140:897;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;227:25:0;;219:83;;;;-1:-1:-1;;;219:83:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;320:29:0;;312:87;;;;-1:-1:-1;;;312:87:0;;;;;;;:::i;:::-;442:18;510:4;504:11;-1:-1:-1;;;535:3:0;528:79;653:11;647:4;643:22;636:4;631:3;627:14;620:46;-1:-1:-1;;;695:4:0;690:3;686:14;679:90;811:4;806:3;803:1;796:20;782:34;-1:-1:-1;;;;;;;843:24:0;;835:59;;;;-1:-1:-1;;;835:59:0;;1073:2:2;835:59:0;;;1055:21:2;1112:2;1092:18;;;1085:30;-1:-1:-1;;;1131:18:2;;;1124:52;1193:18;;835:59:0;871:346:2;835:59:0;937:39;;-1:-1:-1;;;937:39:0;;-1:-1:-1;;;;;1386:32:2;;;937:39:0;;;1368:51:2;937:22:0;;;;;1341:18:2;;937:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1010:20:0;;-1:-1:-1;;;;;1386:32:2;;1368:51;;1010:20:0;;-1:-1:-1;1356:2:2;1341:18;;-1:-1:-1;1010:20:0;;;;;;;209:828;140:897;;:::o;14:173:2:-;82:20;;-1:-1:-1;;;;;131:31:2;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:260::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;;408:38;442:2;431:9;427:18;408:38;:::i;:::-;398:48;;192:260;;;;;:::o;457:409::-;659:2;641:21;;;698:2;678:18;;;671:30;737:34;732:2;717:18;;710:62;-1:-1:-1;;;803:2:2;788:18;;781:43;856:3;841:19;;457:409::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    80,
    1039
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x545E7C61 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB JUMP JUMPDEST PUSH2 0x45 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B SWAP1 PUSH2 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B SWAP1 PUSH2 0x21E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP4 PUSH1 0x60 SHL PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x132 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x115490CC4C4D8DCE8818DC99585D194819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x66AD14F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0x19AB453C SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x189 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH32 0xF40FCEC21964FFB566044D083B4073F29F7F7929110EA19E1B3EBE375D89055E SWAP3 POP PUSH1 0x20 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x207 DUP4 PUSH2 0x1CF JUMP JUMPDEST SWAP2 POP PUSH2 0x215 PUSH1 0x20 DUP5 ADD PUSH2 0x1CF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F20696D706C656D656E746174696F6E20636F6E7472616374206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x39B99039B832B1B4B334B2B217 PUSH1 0x99 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH COINBASE SWAP14 0xE0 0x21 0xE7 SIGNEXTEND 0xA7 0xC5 CALL SWAP8 0xC5 0xAC DUP4 0xB3 SWAP7 MSTORE8 0xF9 0x22 SWAP8 PUSH15 0xF423C5CB6E41BC3DC5F7D364736F6C PUSH4 0x4300080D STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        80,
        1039
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B"
    },
    "25": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x545E7C61"
    },
    "38": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "EQ",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30"
    },
    "42": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "46": {
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "DUP1",
      "path": "0"
    },
    "47": {
      "first_revert": true,
      "fn": null,
      "offset": [
        80,
        1039
      ],
      "op": "REVERT",
      "path": "0"
    },
    "48": {
      "fn": "Factory.deploy",
      "offset": [
        140,
        1037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "49": {
      "fn": "Factory.deploy",
      "offset": [
        140,
        1037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43"
    },
    "52": {
      "fn": "Factory.deploy",
      "offset": [
        140,
        1037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E"
    },
    "55": {
      "fn": "Factory.deploy",
      "offset": [
        140,
        1037
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "56": {
      "fn": "Factory.deploy",
      "offset": [
        140,
        1037
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "58": {
      "fn": "Factory.deploy",
      "offset": [
        140,
        1037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EB"
    },
    "61": {
      "fn": "Factory.deploy",
      "jump": "i",
      "offset": [
        140,
        1037
      ],
      "op": "JUMP",
      "path": "0"
    },
    "62": {
      "fn": "Factory.deploy",
      "offset": [
        140,
        1037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "63": {
      "fn": "Factory.deploy",
      "offset": [
        140,
        1037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45"
    },
    "66": {
      "fn": "Factory.deploy",
      "jump": "i",
      "offset": [
        140,
        1037
      ],
      "op": "JUMP",
      "path": "0"
    },
    "67": {
      "fn": "Factory.deploy",
      "offset": [
        140,
        1037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "68": {
      "fn": "Factory.deploy",
      "offset": [
        140,
        1037
      ],
      "op": "STOP",
      "path": "0"
    },
    "69": {
      "fn": "Factory.deploy",
      "offset": [
        140,
        1037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "70": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "72": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "74": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "76": {
      "op": "SHL"
    },
    "77": {
      "op": "SUB"
    },
    "78": {
      "fn": "Factory.deploy",
      "offset": [
        227,
        252
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 0
    },
    "79": {
      "branch": 5,
      "fn": "Factory.deploy",
      "offset": [
        227,
        252
      ],
      "op": "AND",
      "path": "0"
    },
    "80": {
      "fn": "Factory.deploy",
      "offset": [
        219,
        302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x74"
    },
    "83": {
      "branch": 5,
      "fn": "Factory.deploy",
      "offset": [
        219,
        302
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "84": {
      "fn": "Factory.deploy",
      "offset": [
        219,
        302
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "86": {
      "fn": "Factory.deploy",
      "offset": [
        219,
        302
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "87": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "91": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "93": {
      "op": "SHL"
    },
    "94": {
      "fn": "Factory.deploy",
      "offset": [
        219,
        302
      ],
      "op": "DUP2",
      "path": "0"
    },
    "95": {
      "fn": "Factory.deploy",
      "offset": [
        219,
        302
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "96": {
      "fn": "Factory.deploy",
      "offset": [
        219,
        302
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "98": {
      "fn": "Factory.deploy",
      "offset": [
        219,
        302
      ],
      "op": "ADD",
      "path": "0"
    },
    "99": {
      "fn": "Factory.deploy",
      "offset": [
        219,
        302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B"
    },
    "102": {
      "fn": "Factory.deploy",
      "offset": [
        219,
        302
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "103": {
      "fn": "Factory.deploy",
      "offset": [
        219,
        302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21E"
    },
    "106": {
      "fn": "Factory.deploy",
      "jump": "i",
      "offset": [
        219,
        302
      ],
      "op": "JUMP",
      "path": "0"
    },
    "107": {
      "fn": "Factory.deploy",
      "offset": [
        219,
        302
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "108": {
      "fn": "Factory.deploy",
      "offset": [
        219,
        302
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "110": {
      "fn": "Factory.deploy",
      "offset": [
        219,
        302
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "111": {
      "fn": "Factory.deploy",
      "offset": [
        219,
        302
      ],
      "op": "DUP1",
      "path": "0"
    },
    "112": {
      "fn": "Factory.deploy",
      "offset": [
        219,
        302
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "113": {
      "fn": "Factory.deploy",
      "offset": [
        219,
        302
      ],
      "op": "SUB",
      "path": "0"
    },
    "114": {
      "fn": "Factory.deploy",
      "offset": [
        219,
        302
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "115": {
      "fn": "Factory.deploy",
      "offset": [
        219,
        302
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "116": {
      "fn": "Factory.deploy",
      "offset": [
        219,
        302
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "123": {
      "op": "SHL"
    },
    "124": {
      "op": "SUB"
    },
    "125": {
      "fn": "Factory.deploy",
      "offset": [
        320,
        349
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 1
    },
    "126": {
      "branch": 6,
      "fn": "Factory.deploy",
      "offset": [
        320,
        349
      ],
      "op": "AND",
      "path": "0"
    },
    "127": {
      "fn": "Factory.deploy",
      "offset": [
        312,
        399
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A"
    },
    "130": {
      "branch": 6,
      "fn": "Factory.deploy",
      "offset": [
        312,
        399
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "131": {
      "fn": "Factory.deploy",
      "offset": [
        312,
        399
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "133": {
      "fn": "Factory.deploy",
      "offset": [
        312,
        399
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "134": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "138": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "140": {
      "op": "SHL"
    },
    "141": {
      "fn": "Factory.deploy",
      "offset": [
        312,
        399
      ],
      "op": "DUP2",
      "path": "0"
    },
    "142": {
      "fn": "Factory.deploy",
      "offset": [
        312,
        399
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "143": {
      "fn": "Factory.deploy",
      "offset": [
        312,
        399
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "145": {
      "fn": "Factory.deploy",
      "offset": [
        312,
        399
      ],
      "op": "ADD",
      "path": "0"
    },
    "146": {
      "fn": "Factory.deploy",
      "offset": [
        312,
        399
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B"
    },
    "149": {
      "fn": "Factory.deploy",
      "offset": [
        312,
        399
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "150": {
      "fn": "Factory.deploy",
      "offset": [
        312,
        399
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21E"
    },
    "153": {
      "fn": "Factory.deploy",
      "jump": "i",
      "offset": [
        312,
        399
      ],
      "op": "JUMP",
      "path": "0"
    },
    "154": {
      "fn": "Factory.deploy",
      "offset": [
        312,
        399
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "155": {
      "fn": "Factory.deploy",
      "offset": [
        442,
        460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "157": {
      "fn": "Factory.deploy",
      "offset": [
        510,
        514
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "159": {
      "fn": "Factory.deploy",
      "offset": [
        504,
        515
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "160": {
      "op": "PUSH20",
      "value": "0x3D602D80600A3D3981F3363D3D373D3D3D363D73"
    },
    "181": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "183": {
      "op": "SHL"
    },
    "184": {
      "fn": "Factory.deploy",
      "offset": [
        535,
        538
      ],
      "op": "DUP2",
      "path": "0"
    },
    "185": {
      "fn": "Factory.deploy",
      "offset": [
        528,
        607
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "186": {
      "fn": "Factory.deploy",
      "offset": [
        653,
        664
      ],
      "op": "DUP4",
      "path": "0"
    },
    "187": {
      "fn": "Factory.deploy",
      "offset": [
        647,
        651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "189": {
      "fn": "Factory.deploy",
      "offset": [
        643,
        665
      ],
      "op": "SHL",
      "path": "0"
    },
    "190": {
      "fn": "Factory.deploy",
      "offset": [
        636,
        640
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "192": {
      "fn": "Factory.deploy",
      "offset": [
        631,
        634
      ],
      "op": "DUP3",
      "path": "0"
    },
    "193": {
      "fn": "Factory.deploy",
      "offset": [
        627,
        641
      ],
      "op": "ADD",
      "path": "0"
    },
    "194": {
      "fn": "Factory.deploy",
      "offset": [
        620,
        666
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "195": {
      "op": "PUSH15",
      "value": "0x5AF43D82803E903D91602B57FD5BF3"
    },
    "211": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "213": {
      "op": "SHL"
    },
    "214": {
      "fn": "Factory.deploy",
      "offset": [
        695,
        699
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x28"
    },
    "216": {
      "fn": "Factory.deploy",
      "offset": [
        690,
        693
      ],
      "op": "DUP3",
      "path": "0"
    },
    "217": {
      "fn": "Factory.deploy",
      "offset": [
        686,
        700
      ],
      "op": "ADD",
      "path": "0"
    },
    "218": {
      "fn": "Factory.deploy",
      "offset": [
        679,
        769
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "219": {
      "fn": "Factory.deploy",
      "offset": [
        811,
        815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x37"
    },
    "221": {
      "fn": "Factory.deploy",
      "offset": [
        806,
        809
      ],
      "op": "DUP2",
      "path": "0"
    },
    "222": {
      "fn": "Factory.deploy",
      "offset": [
        803,
        804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "224": {
      "fn": "Factory.deploy",
      "offset": [
        796,
        816
      ],
      "op": "CREATE",
      "path": "0"
    },
    "225": {
      "fn": "Factory.deploy",
      "offset": [
        782,
        816
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "226": {
      "op": "POP"
    },
    "227": {
      "op": "POP"
    },
    "228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "234": {
      "op": "SHL"
    },
    "235": {
      "op": "SUB"
    },
    "236": {
      "fn": "Factory.deploy",
      "offset": [
        843,
        867
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 2
    },
    "237": {
      "branch": 7,
      "fn": "Factory.deploy",
      "offset": [
        843,
        867
      ],
      "op": "AND",
      "path": "0"
    },
    "238": {
      "fn": "Factory.deploy",
      "offset": [
        835,
        894
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x132"
    },
    "241": {
      "branch": 7,
      "fn": "Factory.deploy",
      "offset": [
        835,
        894
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "242": {
      "fn": "Factory.deploy",
      "offset": [
        835,
        894
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "244": {
      "fn": "Factory.deploy",
      "offset": [
        835,
        894
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "245": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "249": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "251": {
      "op": "SHL"
    },
    "252": {
      "fn": "Factory.deploy",
      "offset": [
        835,
        894
      ],
      "op": "DUP2",
      "path": "0"
    },
    "253": {
      "fn": "Factory.deploy",
      "offset": [
        835,
        894
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "256": {
      "fn": "Factory.deploy",
      "offset": [
        835,
        894
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "258": {
      "fn": "Factory.deploy",
      "offset": [
        835,
        894
      ],
      "op": "DUP3",
      "path": "0"
    },
    "259": {
      "fn": "Factory.deploy",
      "offset": [
        835,
        894
      ],
      "op": "ADD",
      "path": "0"
    },
    "260": {
      "op": "MSTORE"
    },
    "261": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "263": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "265": {
      "op": "DUP3"
    },
    "266": {
      "op": "ADD"
    },
    "267": {
      "op": "MSTORE"
    },
    "268": {
      "op": "PUSH22",
      "value": "0x115490CC4C4D8DCE8818DC99585D194819985A5B1959"
    },
    "291": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "293": {
      "op": "SHL"
    },
    "294": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "296": {
      "op": "DUP3"
    },
    "297": {
      "op": "ADD"
    },
    "298": {
      "op": "MSTORE"
    },
    "299": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "301": {
      "op": "ADD"
    },
    "302": {
      "fn": "Factory.deploy",
      "offset": [
        835,
        894
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B"
    },
    "305": {
      "op": "JUMP"
    },
    "306": {
      "fn": "Factory.deploy",
      "offset": [
        835,
        894
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "307": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x40"
    },
    "309": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "310": {
      "op": "PUSH4",
      "value": "0x66AD14F"
    },
    "315": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "317": {
      "op": "SHL"
    },
    "318": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "DUP2",
      "path": "0"
    },
    "319": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "326": {
      "op": "SHL"
    },
    "327": {
      "op": "SUB"
    },
    "328": {
      "op": "DUP4"
    },
    "329": {
      "op": "DUP2"
    },
    "330": {
      "op": "AND"
    },
    "331": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "333": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "DUP4",
      "path": "0"
    },
    "334": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "ADD",
      "path": "0"
    },
    "335": {
      "op": "MSTORE"
    },
    "336": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        959
      ],
      "op": "DUP3",
      "path": "0"
    },
    "337": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        959
      ],
      "op": "AND",
      "path": "0"
    },
    "338": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        959
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "339": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        959
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x19AB453C"
    },
    "344": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        959
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "345": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "347": {
      "op": "ADD"
    },
    "348": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "350": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "352": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "353": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "DUP1",
      "path": "0"
    },
    "354": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "DUP4",
      "path": "0"
    },
    "355": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "SUB",
      "path": "0"
    },
    "356": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "DUP2",
      "path": "0"
    },
    "357": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "359": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "DUP8",
      "path": "0"
    },
    "360": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "DUP1",
      "path": "0"
    },
    "361": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "362": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "363": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "DUP1",
      "path": "0"
    },
    "364": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "365": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x175"
    },
    "368": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "369": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "371": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "DUP1",
      "path": "0"
    },
    "372": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "REVERT",
      "path": "0"
    },
    "373": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "374": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "POP",
      "path": "0"
    },
    "375": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "GAS",
      "path": "0"
    },
    "376": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "CALL",
      "path": "0"
    },
    "377": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "378": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "DUP1",
      "path": "0"
    },
    "379": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "380": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x189"
    },
    "383": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "384": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "385": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "387": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "DUP1",
      "path": "0"
    },
    "388": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "389": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "390": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "392": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "REVERT",
      "path": "0"
    },
    "393": {
      "fn": "Factory.deploy",
      "offset": [
        937,
        976
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "394": {
      "op": "POP"
    },
    "395": {
      "op": "POP"
    },
    "396": {
      "fn": "Factory.deploy",
      "offset": [
        1010,
        1030
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x40"
    },
    "398": {
      "fn": "Factory.deploy",
      "offset": [
        1010,
        1030
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "405": {
      "op": "SHL"
    },
    "406": {
      "op": "SUB"
    },
    "407": {
      "op": "DUP5"
    },
    "408": {
      "op": "AND"
    },
    "409": {
      "op": "DUP2"
    },
    "410": {
      "op": "MSTORE"
    },
    "411": {
      "fn": "Factory.deploy",
      "offset": [
        1010,
        1030
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF40FCEC21964FFB566044D083B4073F29F7F7929110EA19E1B3EBE375D89055E"
    },
    "444": {
      "fn": "Factory.deploy",
      "offset": [
        1010,
        1030
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "445": {
      "op": "POP"
    },
    "446": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "448": {
      "op": "ADD"
    },
    "449": {
      "op": "SWAP1"
    },
    "450": {
      "op": "POP"
    },
    "451": {
      "fn": "Factory.deploy",
      "offset": [
        1010,
        1030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "453": {
      "fn": "Factory.deploy",
      "offset": [
        1010,
        1030
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "454": {
      "fn": "Factory.deploy",
      "offset": [
        1010,
        1030
      ],
      "op": "DUP1",
      "path": "0"
    },
    "455": {
      "fn": "Factory.deploy",
      "offset": [
        1010,
        1030
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "456": {
      "fn": "Factory.deploy",
      "offset": [
        1010,
        1030
      ],
      "op": "SUB",
      "path": "0"
    },
    "457": {
      "fn": "Factory.deploy",
      "offset": [
        1010,
        1030
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "458": {
      "fn": "Factory.deploy",
      "offset": [
        1010,
        1030
      ],
      "op": "LOG1",
      "path": "0"
    },
    "459": {
      "fn": "Factory.deploy",
      "offset": [
        209,
        1037
      ],
      "op": "POP",
      "path": "0"
    },
    "460": {
      "fn": "Factory.deploy",
      "offset": [
        140,
        1037
      ],
      "op": "POP",
      "path": "0"
    },
    "461": {
      "fn": "Factory.deploy",
      "offset": [
        140,
        1037
      ],
      "op": "POP",
      "path": "0"
    },
    "462": {
      "fn": "Factory.deploy",
      "jump": "o",
      "offset": [
        140,
        1037
      ],
      "op": "JUMP",
      "path": "0"
    },
    "463": {
      "op": "JUMPDEST"
    },
    "464": {
      "op": "DUP1"
    },
    "465": {
      "op": "CALLDATALOAD"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "472": {
      "op": "SHL"
    },
    "473": {
      "op": "SUB"
    },
    "474": {
      "op": "DUP2"
    },
    "475": {
      "op": "AND"
    },
    "476": {
      "op": "DUP2"
    },
    "477": {
      "op": "EQ"
    },
    "478": {
      "op": "PUSH2",
      "value": "0x1E6"
    },
    "481": {
      "op": "JUMPI"
    },
    "482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "484": {
      "op": "DUP1"
    },
    "485": {
      "op": "REVERT"
    },
    "486": {
      "op": "JUMPDEST"
    },
    "487": {
      "op": "SWAP2"
    },
    "488": {
      "op": "SWAP1"
    },
    "489": {
      "op": "POP"
    },
    "490": {
      "jump": "o",
      "op": "JUMP"
    },
    "491": {
      "op": "JUMPDEST"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "494": {
      "op": "DUP1"
    },
    "495": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "497": {
      "op": "DUP4"
    },
    "498": {
      "op": "DUP6"
    },
    "499": {
      "op": "SUB"
    },
    "500": {
      "op": "SLT"
    },
    "501": {
      "op": "ISZERO"
    },
    "502": {
      "op": "PUSH2",
      "value": "0x1FE"
    },
    "505": {
      "op": "JUMPI"
    },
    "506": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "508": {
      "op": "DUP1"
    },
    "509": {
      "op": "REVERT"
    },
    "510": {
      "op": "JUMPDEST"
    },
    "511": {
      "op": "PUSH2",
      "value": "0x207"
    },
    "514": {
      "op": "DUP4"
    },
    "515": {
      "op": "PUSH2",
      "value": "0x1CF"
    },
    "518": {
      "jump": "i",
      "op": "JUMP"
    },
    "519": {
      "op": "JUMPDEST"
    },
    "520": {
      "op": "SWAP2"
    },
    "521": {
      "op": "POP"
    },
    "522": {
      "op": "PUSH2",
      "value": "0x215"
    },
    "525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "527": {
      "op": "DUP5"
    },
    "528": {
      "op": "ADD"
    },
    "529": {
      "op": "PUSH2",
      "value": "0x1CF"
    },
    "532": {
      "jump": "i",
      "op": "JUMP"
    },
    "533": {
      "op": "JUMPDEST"
    },
    "534": {
      "op": "SWAP1"
    },
    "535": {
      "op": "POP"
    },
    "536": {
      "op": "SWAP3"
    },
    "537": {
      "op": "POP"
    },
    "538": {
      "op": "SWAP3"
    },
    "539": {
      "op": "SWAP1"
    },
    "540": {
      "op": "POP"
    },
    "541": {
      "jump": "o",
      "op": "JUMP"
    },
    "542": {
      "op": "JUMPDEST"
    },
    "543": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "545": {
      "op": "DUP1"
    },
    "546": {
      "op": "DUP3"
    },
    "547": {
      "op": "MSTORE"
    },
    "548": {
      "op": "PUSH1",
      "value": "0x2D"
    },
    "550": {
      "op": "SWAP1"
    },
    "551": {
      "op": "DUP3"
    },
    "552": {
      "op": "ADD"
    },
    "553": {
      "op": "MSTORE"
    },
    "554": {
      "op": "PUSH32",
      "value": "0x4E6F20696D706C656D656E746174696F6E20636F6E7472616374206164647265"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "589": {
      "op": "DUP3"
    },
    "590": {
      "op": "ADD"
    },
    "591": {
      "op": "MSTORE"
    },
    "592": {
      "op": "PUSH13",
      "value": "0x39B99039B832B1B4B334B2B217"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "608": {
      "op": "SHL"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "611": {
      "op": "DUP3"
    },
    "612": {
      "op": "ADD"
    },
    "613": {
      "op": "MSTORE"
    },
    "614": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "616": {
      "op": "ADD"
    },
    "617": {
      "op": "SWAP1"
    },
    "618": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "8bc6aa14bca80086d0cbbaa0afe7a2d92e938231",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./Vault.sol\";\n\ncontract Factory {\n    event Deployed(address addr);\n\n\n\n    function deploy(address _vault_code, address _implementation) public {\n        require(_vault_code != address(0), \"No implementation contract address specified.\");\n        require(_implementation != address(0), \"No implementation contract address specified.\");\n\n        // clone vault instance\n        address vault_addr;\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, _vault_code))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n            vault_addr := create(0, ptr, 0x37)\n        }\n        require(vault_addr != address(0), \"ERC1167: create failed\");\n\n        // set necessary params\n        Vault(vault_addr).init(_implementation);\n\n        // events\n        emit Deployed(vault_addr);\n    }\n}\n",
  "sourceMap": "80:959:0:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Factory.sol",
  "type": "contract"
}